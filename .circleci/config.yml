version: 2
jobs:
  build:
    environment:
      - PACKAGE_PATH: "github.com/inloco/kafka-elasticsearch-injector"
    docker:
      - image: circleci/golang:1.12
        environment:
          DOCKER_REPO: inlocomedia/kafka-elasticsearch-injector-go
      - image: confluentinc/cp-zookeeper:3.1.1
        environment:
          - ZOOKEEPER_CLIENT_PORT=2181
      - image: confluentinc/cp-kafka:3.1.1
        environment:
          - KAFKA_ZOOKEEPER_CONNECT=localhost:2181
          - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - image: confluentinc/cp-schema-registry:3.1.1
        environment:
          - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=localhost:2181
          - SCHEMA_REGISTRY_HOST_NAME=localhost
          - SCHEMA_REGISTRY_LISTENERS=http://localhost:8081
      - image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.0.0
        environment:
          ES_JAVA_OPTS: -Xms750m -Xmx750m
          discovery.type: single-node
          http.host: 0.0.0.0
          transport.host: 127.0.0.1
    steps:
      - checkout
      - run:
          name: Generate helper files
          command: echo $(git rev-parse --short HEAD) > HEAD
      - setup_remote_docker:
          reusable: true
      - run:
          name: Login to Docker Hub
          command: |
            docker info
            docker login --username $DOCKER_USER --password $DOCKER_PASSWORD
      - restore_cache:
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}
      - run:
          name: "Make sure elasticsearch is up and running"
          command: |
            count=0; \
              until nc -z localhost 9200 || ((count ++ >= 10)); \
              do echo "Retrying: Verify if Elasticsearch is ready"; sleep 5; done
      - run:
          name: "Run project tests (excluding vendor)"
          command: go test $(go list ./... | grep -v /vendor/)
      - run:
          name: Build injector
          command: GOOS=linux GOARCH=386 go build -a --ldflags="-s" -o bin/injector cmd/injector.go
      - run:
          name: Build injector docker image
          command: |
            docker build --rm=false -t "${DOCKER_REPO}:ci" -f cmd/Dockerfile .
      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"
      - deploy:
          name: Push to Docker Hub
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker tag "${DOCKER_REPO}:ci" "${DOCKER_REPO}:$(cat VERSION)"
              docker push "${DOCKER_REPO}:$(cat VERSION)"
              docker tag "${DOCKER_REPO}:ci" "${DOCKER_REPO}:master"
              docker push "${DOCKER_REPO}:master"
            elif [[ $(echo "${CIRCLE_BRANCH}"| grep -c -e "hotfix\/.*") -gt 0 ]]; then
              docker tag "${DOCKER_REPO}:ci" "${DOCKER_REPO}:$(cat VERSION)-pre"
              docker push "${DOCKER_REPO}:$(cat VERSION)-pre"
            elif [[ $(echo "${CIRCLE_BRANCH}"| grep -c -e "release\/.*") -gt 0 ]]; then
              docker tag "${DOCKER_REPO}:ci" "${DOCKER_REPO}:$(cat VERSION)-pre"
              docker push "${DOCKER_REPO}:$(cat VERSION)-pre"
            else
              docker tag "${DOCKER_REPO}:ci" "${DOCKER_REPO}:$(cat VERSION)-$(cat HEAD)"
              docker push "${DOCKER_REPO}:$(cat VERSION)-$(cat HEAD)"
            fi
